#!/bin/bash

set -x

function create_crc_libvirt_sh {
    hostInfo=$(sudo virsh net-dumpxml ${VM_PREFIX} | grep ${VM_PREFIX}-master-0 | sed "s/^[ \t]*//")
    masterMac=$(sudo virsh dumpxml ${VM_PREFIX}-master-0 | grep "mac address" | sed "s/^[ \t]*//")

    sed "s|ReplaceMeWithCorrectVmName|${CRC_VM_NAME}|g" crc_libvirt.template > $tarballDirectory/crc_libvirt.sh
    sed -i "s|ReplaceMeWithCorrectBaseDomain|${BASE_DOMAIN}|g" $tarballDirectory/crc_libvirt.sh
    sed -i "s|ReplaceMeWithCorrectHost|$hostInfo|g" $tarballDirectory/crc_libvirt.sh
    sed -i "s|ReplaceMeWithCorrectMac|$masterMac|g" $tarballDirectory/crc_libvirt.sh

    chmod +x $tarballDirectory/crc_libvirt.sh
}

function create_disk_image {
    sudo cp /var/lib/libvirt/images/${VM_PREFIX}-master-0 $tarballDirectory
    sudo cp /var/lib/libvirt/images/${VM_PREFIX}-base $tarballDirectory

    sudo chown $USER:$USER -R $tarballDirectory
    ${QEMU_IMG} rebase -b ${VM_PREFIX}-base $tarballDirectory/${VM_PREFIX}-master-0
    ${QEMU_IMG} commit $tarballDirectory/${VM_PREFIX}-master-0

    # TMPDIR must point at a directory with as much free space as the size of the
    # image we want to sparsify
    TMPDIR=$(pwd)/$tarballDirectory ${VIRT_SPARSIFY} $tarballDirectory/${VM_PREFIX}-base $tarballDirectory/${CRC_VM_NAME}.qcow2
    rm -fr $tarballDirectory/.guestfs-*

    rm -fr $tarballDirectory/${VM_PREFIX}-master-0 $tarballDirectory/${VM_PREFIX}-base
}

function update_json_description {
    cat $1/crc-bundle-info.json \
        | ${JQ} ".clusterInfo.masterHostname = \"${VM_PREFIX}-master-0\"" \
        | ${JQ} '.clusterInfo.sshPrivateKeyFile = "id_rsa_crc"' \
        | ${JQ} '.clusterInfo.kubeConfig = "kubeconfig"' \
        | ${JQ} '.clusterInfo.kubeadminPasswordFile = "kubeadmin-password"' \
        | ${JQ} ".storage.diskImages[0].name = \"${CRC_VM_NAME}.qcow2\"" \
        | ${JQ} '.storage.diskImages[0].format = "qcow2"' \
        >$tarballDirectory/crc-bundle-info.json
}

# CRC_VM_NAME: short VM name to use in crc_libvirt.sh
# BASE_DOMAIN: domain used for the cluster
# VM_PREFIX: full VM name with the random string generated by openshift-installer
CRC_VM_NAME=${CRC_VM_NAME:-crc}
BASE_DOMAIN=${CRC_BASE_DOMAIN:-testing}
JQ=${JQ:-jq}
VIRT_SPARSIFY=${VIRT_SPARSIFY:-virt-sparsify}
QEMU_IMG=${QEMU_IMG:-qemu-img}

if [[ $# -ne 1 ]]; then
   echo "You need to provide the running cluster directory to copy kubeconfig"
   exit 1
fi

if ! which ${JQ}; then
    sudo yum -y install /usr/bin/jq
fi

if ! which ${VIRT_SPARSIFY}; then
    sudo yum -y install /usr/bin/virt-sparsify
fi

if ! which ${QEMU_IMG}; then
    sudo yum -y install /usr/bin/qemu-img
fi

tarballDirectory="crc_libvirt_$(date --iso-8601)"
mkdir $tarballDirectory

random_string=$(sudo virsh list --all | grep -oP "(?<=${CRC_VM_NAME}-).*(?=-master-0)")
if [ -z $random_string ]; then
    echo "Could not find virtual machine created by snc.sh"
    exit 1;
fi
VM_PREFIX=${CRC_VM_NAME}-${random_string}

# Shutdown the instance
sudo virsh shutdown ${VM_PREFIX}-master-0

create_crc_libvirt_sh

create_disk_image

# Copy the kubeconfig and kubeadm password file
cp $1/auth/kube* $tarballDirectory/

# Copy the master public key
cp id_rsa_crc $tarballDirectory/
chmod 400 $tarballDirectory/id_rsa_crc

update_json_description $1

tar cJSf $tarballDirectory.tar.xz $tarballDirectory
